name: Veracode SCA Agent Demo
on:
  workflow_dispatch:
  #pull_request:
   # branches: [ feature, main ]

jobs: 
  SCA: 
    name: Software Composition Analysis
    runs-on: ubuntu-latest
    env: 
        SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        SCAN_DIR: "./app"
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Build with Maven
        run: |
          cd app/
          mvn -B clean package --file pom.xml
          ls target/
          cd .. 
          ls
          
      - name: Veracode Dependency Scanning
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-sca@0f32dfca4c613ff2a68fe52eacd4d340e47fd00b
        uses: veracode/veracode-sca@v2.1.10
        with:
    # Authorization token to query and create issues
          github_token: ${{ github.token }}
    # Run the SRCCLR with the `--quick` options
          quick: false
    # Show update advisor
          update_advisor: false
    # A git URL to work with in case the scan is not for the current repository
    # An attribute to instruct the action to create an issue from found vulnerability or just simple text output
          create-issues: false
    # A path within the repository where the build definition starts
          path: .
    # Run the SRCCLR in debug mode
          debug: false
    # Run the SRCCLR with the `--skip-collectors` options
          skip-collectors: false
    # Run the SRCCLR with the `--allow-dirty` option
          allow-dirty: true
    # Run the SRCCLR with the `--recursive` option
          recursive: false
    # Run the SRCCLR with the `--skip-vms` option
          skip-vms: false
    # Run the SRCCLR with the `--no-graphs` option
          no-graphs: false
          

              
              
          
          
